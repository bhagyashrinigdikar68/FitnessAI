{
  "name": "fitnova-app",
  "version": "1.0.0",
  "description": "#1 Free Fitness App - Transform your fitness journey with personalized workouts, guided meditation, and AI-powered coaching",
  "main": "my.html",
  "homepage": "https://fitnova-demo.vercel.app",
  "repository": {
    "type": "git",
    "url": "https://github.com/fitnova/app.git"
  },
  "bugs": {
    "url": "https://github.com/fitnova/app/issues"
  },
  "keywords": [
    "fitness",
    "workout",
    "meditation",
    "health",
    "exercise",
    "wellness",
    "pwa",
    "javascript",
    "html5",
    "css3",
    "responsive",
    "mobile-first",
    "accessibility",
    "open-source"
  ],
  "author": "FITNOVA Team <team@fitnova.com>",
  "license": "MIT",
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "start": "npx serve -s . -l 3000",
    "dev": "npx serve -s . -l 3000 --live-reload",
    "build": "npm run optimize",
    "optimize": "npm run minify:css && npm run minify:js && npm run optimize:images",
    "minify:css": "npx csso --input my.html --output dist/my.html",
    "minify:js": "echo 'JavaScript minification would be applied here'",
    "optimize:images": "echo 'Image optimization would be applied here'",
    "test": "npm run test:html && npm run test:accessibility && npm run test:performance",
    "test:html": "npx html-validate my.html",
    "test:accessibility": "npx pa11y http://localhost:3000/my.html",
    "test:performance": "npx lighthouse http://localhost:3000/my.html --output=json --output-path=./lighthouse-report.json",
    "test:w3c": "npx html-validate --config .htmlvalidate.json my.html",
    "lint": "npm run lint:html && npm run lint:css && npm run lint:js",
    "lint:html": "npx htmlhint my.html",
    "lint:css": "npx stylelint '**/*.css'",
    "lint:js": "npx eslint '**/*.js'",
    "format": "npx prettier --write '**/*.{html,css,js,json,md}'",
    "preview": "npm start",
    "deploy": "npm run build && npx vercel --prod",
    "deploy:netlify": "npm run build && npx netlify deploy --prod --dir=.",
    "deploy:gh-pages": "npm run build && npx gh-pages -d .",
    "serve:production": "npx serve -s . -l 8080",
    "analyze": "npm run analyze:bundle && npm run analyze:performance",
    "analyze:bundle": "echo 'Bundle analysis would be performed here'",
    "analyze:performance": "npm run test:performance",
    "security:audit": "npm audit --audit-level moderate",
    "security:check": "npx nsp check",
    "precommit": "npm run lint && npm run test:html",
    "prepush": "npm run test",
    "postinstall": "echo 'FITNOVA setup complete! Run npm start to begin development'",
    "clean": "rm -rf dist/ node_modules/ package-lock.json",
    "reset": "npm run clean && npm install",
    "update": "npx npm-check-updates -u && npm install",
    "docs": "echo 'Documentation server would start here'",
    "stats": "echo 'Project statistics would be displayed here'"
  },
  "devDependencies": {
    "@html-validate/stylish": "^4.0.0",
    "csso-cli": "^4.0.2",
    "eslint": "^8.0.0",
    "gh-pages": "^4.0.0",
    "html-validate": "^7.0.0",
    "htmlhint": "^1.1.4",
    "lighthouse": "^10.0.0",
    "netlify-cli": "^15.0.0",
    "npm-check-updates": "^16.0.0",
    "nsp": "^3.2.1",
    "pa11y": "^6.2.3",
    "prettier": "^2.8.0",
    "serve": "^14.0.0",
    "stylelint": "^15.0.0",
    "vercel": "^32.0.0"
  },
  "dependencies": {},
  "peerDependencies": {},
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead",
    "not ie 11"
  ],
  "config": {
    "port": 3000,
    "host": "localhost"
  },
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/fitnova"
  },
  "contributors": [
    "FITNOVA Team <team@fitnova.com>",
    "Community Contributors"
  ],
  "files": [
    "my.html",
    "my.txt",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "DEPLOYMENT.md"
  ],
  "publishConfig": {
    "access": "public"
  },
  "volta": {
    "node": "18.17.0",
    "npm": "9.8.1"
  },
  "packageManager": "npm@9.8.1",
  "type": "module",
  "exports": {
    ".": "./my.html"
  },
  "workspaces": [],
  "private": false,
  "preferGlobal": false,
  "os": [
    "darwin",
    "linux",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "directories": {
    "doc": "./docs",
    "test": "./tests"
  },
  "man": [],
  "bin": {},
  "optionalDependencies": {},
  "bundleDependencies": [],
  "eslintConfig": {
    "env": {
      "browser": true,
      "es2021": true
    },
    "extends": [
      "eslint:recommended"
    ],
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "rules": {
      "no-unused-vars": "warn",
      "no-console": "off",
      "prefer-const": "error",
      "no-var": "error"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2,
    "useTabs": false
  },
  "stylelint": {
    "extends": [
      "stylelint-config-standard"
    ],
    "rules": {
      "color-no-invalid-hex": true,
      "font-family-no-duplicate-names": true,
      "function-calc-no-unspaced-operator": true,
      "string-no-newline": true
    }
  },
  "htmlvalidate": {
    "extends": [
      "html-validate:recommended"
    ],
    "rules": {
      "void-style": "omit",
      "close-order": "error",
      "deprecated": "error"
    }
  },
  "lighthouse": {
    "extends": "lighthouse:default",
    "settings": {
      "formFactor": "desktop",
      "throttling": {
        "rttMs": 40,
        "throughputKbps": 10240,
        "cpuSlowdownMultiplier": 1,
        "requestLatencyMs": 0,
        "downloadThroughputKbps": 0,
        "uploadThroughputKbps": 0
      },
      "screenEmulation": {
        "mobile": false,
        "width": 1350,
        "height": 940,
        "deviceScaleFactor": 1,
        "disabled": false
      },
      "emulatedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.109 Safari/537.36 LH"
    }
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": "> 0.25%, not dead"
        }
      ]
    ]
  },
  "jest": {
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ],
    "testMatch": [
      "<rootDir>/tests/**/*.test.js"
    ],
    "collectCoverageFrom": [
      "**/*.js",
      "!node_modules/**",
      "!coverage/**"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run precommit",
      "pre-push": "npm run prepush"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "renovate": {
    "extends": [
      "config:base"
    ]
  },
  "release": {
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  }
}
